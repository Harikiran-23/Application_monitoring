version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 10s
      retries: 5
      start_period: 10s


  backend:
    build: ./backend
    container_name: backend
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
    restart: always

  simulator:
    build: ./workload-simulator
    container_name: simulator
    depends_on:
      - backend

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: monitoring
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  log-consumer:
    build: ./log-consumer
    container_name: log-consumer
    depends_on:
      - kafka
      - postgres

volumes:
  pgdata:
